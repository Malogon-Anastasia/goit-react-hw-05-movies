{"version":3,"file":"static/js/MoviesPage.c2337f3a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","services/api.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieSearchForm/MovieSearchForm.js","views/MoviesPage.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport \"./MoviesList.scss\";\nimport noImage from \"../../No-image.jpg\"\n\nexport default function MoviesList({ movies }) {\n  let location = useLocation();\n  return (\n    <ul className=\"movie__list\">\n      {movies.map(movie => {\n        return (\n          <li key={movie.id} className=\"movie-list__item\">\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {/* {movie.original_title || movie.original_name} */}\n           \n            <img\n              className =\"movie-poster\"\n                src={movie.poster_path? `https://image.tmdb.org/t/p/w500${movie.poster_path}`: noImage}\n                   alt={movie.original_title}>\n            </img>\n              <h2 className=\"movie-title\">{movie.title}</h2>\n              </Link>\n          </li>\n          \n        );\n      })}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};","import axios from 'axios';\n\nconst movieDbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '94f703750c3e0771d8c2babc592efc94',\n  },\n});\n\nasync function getTrendingMovies(page) {\n  const params = {\n    page,\n  };\n\n  const respons = await movieDbApi.get(`/trending/movie/day`, { params });\n\n  return respons.data.results;\n}\n\nasync function getMovieById(movieId) {\n  const respons = await movieDbApi.get(`/movie/${movieId}`);\n\n  return respons.data;\n}\n\nasync function getMovieByQuery(query) {\n  if (!query) {\n    return;\n  }\n\n  const params = {\n    query,\n  };\n\n  const respons = await movieDbApi.get('search/movie', { params });\n\n  return respons.data.results;\n}\n\nasync function getMovieCast(movieId) {\n  const respons = await movieDbApi(`/movie/${movieId}/credits`);\n  return respons.data;\n}\n\nasync function getMovieRewiews(movieId) {\n  const respons = await movieDbApi(`/movie/${movieId}/reviews`);\n\n  return respons.data.results;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieRewiews,\n  getMovieByQuery,\n};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport \"../../views/btn.scss\"\nexport default function MovieSearchForm() {\n  const [input, setInput] = useState('');\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const onInput = e => {\n    const query = e.target.value;\n    setInput(query);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    navigate({ ...location, search: `query=${input}` });\n\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input type=\"text\" name=\"query\" placeholder='Search films' onChange={onInput} value={input} class=\"input-styles\" />\n      <button className=\"btn-sub\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieByQuery } from '../services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport MovieSearchForm from '../components/MovieSearchForm/MovieSearchForm';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n\n  let location = useLocation();\n\n  const urlQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    getMovieByQuery(urlQuery).then(setMovies);\n  }, [urlQuery]);\n\n  return (\n    <div>\n      <MovieSearchForm />\n      {movies && <MoviesList movies={movies} />}\n    </div>\n  );\n}"],"names":["MoviesList","movies","location","useLocation","className","map","movie","to","id","state","from","src","poster_path","noImage","alt","original_title","title","movieDbApi","axios","baseURL","params","api_key","getTrendingMovies","page","get","respons","data","results","getMovieById","movieId","getMovieByQuery","query","getMovieCast","getMovieRewiews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MovieSearchForm","useState","input","setInput","navigate","useNavigate","onSubmit","e","preventDefault","search","type","name","placeholder","onChange","class","MoviesPage","setMovies","urlQuery","URLSearchParams","useEffect","then"],"sourceRoot":""}