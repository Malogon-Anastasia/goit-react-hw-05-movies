{"version":3,"file":"static/js/MovieDetailsPage.44108a97.chunk.js","mappings":"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","sources":["services/api.js","components/MovieCard/MovieCard.js","components/SubMenu/SubMenu.js","views/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst movieDbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '94f703750c3e0771d8c2babc592efc94',\n  },\n});\n\nasync function getTrendingMovies(page) {\n  const params = {\n    page,\n  };\n\n  const respons = await movieDbApi.get(`/trending/movie/day`, { params });\n\n  return respons.data.results;\n}\n\nasync function getMovieById(movieId) {\n  const respons = await movieDbApi.get(`/movie/${movieId}`);\n\n  return respons.data;\n}\n\nasync function getMovieByQuery(query) {\n  if (!query) {\n    return;\n  }\n\n  const params = {\n    query,\n  };\n\n  const respons = await movieDbApi.get('search/movie', { params });\n\n  return respons.data.results;\n}\n\nasync function getMovieCast(movieId) {\n  const respons = await movieDbApi(`/movie/${movieId}/credits`);\n\n  return respons.data;\n}\n\nasync function getMovieRewiews(movieId) {\n  const respons = await movieDbApi(`/movie/${movieId}/reviews`);\n\n  return respons.data.results;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieRewiews,\n  getMovieByQuery,\n};","import PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport default function MovieCard({ movie }) {\n  const { title, poster_path, popularity, overview, genres } = movie;\n\n  return (\n    <div className=\"movieCard\">\n      <img\n        src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n        alt={`poster of ${title}`}\n        className=\"movieCard__poster\"\n      />\n      <div className=\"movieCard__desc\">\n        <h2 className=\"movieCard__title\">{title}</h2>\n        <span className=\"movieCard__score\">\n          User score {Math.round(popularity)}\n        </span>\n\n        <h3 className=\"movieCard__title\">Overview</h3>\n        <p className=\"movieCard__overview\">{overview}</p>\n\n        <h3 className=\"movieCard__title\">Genres</h3>\n        <span className=\"movieCard__genres\">\n          {genres.map(gen => gen.name).join(', ')}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object,\n};","import { NavLink } from 'react-router-dom';\nimport './SubMenu.scss';\n\nexport default function SubMenu() {\n  return (\n    <div className=\"subMenu\">\n      <h4 className=\"subMenu__title\">Additional information</h4>\n      <ul className=\"subMenu__list\">\n        <li className=\"subMenu__item\">\n          <NavLink className=\"subMenu__link\" to=\"cast\">\n            Cast\n          </NavLink>\n        </li>\n        <li className=\"subMenu__item\">\n          <NavLink className=\"subMenu__link\" to=\"reviews\">\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}","import {\n    useParams,\n    Route,\n    Routes,\n    useLocation,\n    useNavigate,\n  } from 'react-router-dom';\n  import { useState, useEffect, lazy, Suspense } from 'react';\n  import \"./btn.scss\";\n  import { getMovieById } from '../services/api';\n  import { useRef } from 'react';\n  \n  import MovieCard from '../components/MovieCard/MovieCard';\n  \n  import SubMenu from '../components/SubMenu/SubMenu';\n  \n  const Cast = lazy(() =>\n    import('../components/Cast/Cast' /* webpackChunkName: \"Cast\" */),\n  );\n  const Reviews = lazy(() =>\n    import('../components/Reviews/Reviews' /* webpackChunkName: \"Reviews\" */),\n  );\n  \n  export default function MovieDetailsPage() {\n    const [movie, setMovie] = useState(null);\n    const params = useParams();\n  \n    const location = useRef(useLocation()?.state?.from ?? '/');\n    const navigate = useNavigate();\n  \n    useEffect(() => {\n      getMovieById(params.movieId).then(r => setMovie(r));\n    }, [params.movieId]);\n  \n    return (\n      <>\n        {movie && (\n          <>\n            <button className=\"btn\" onClick={() => navigate(location.current)}>\n              Go back\n            </button>\n            <MovieCard movie={movie} />\n            <SubMenu />\n            <Suspense fallback={<p>Loading</p>}>\n              <Routes>\n                <Route path=\"cast\" element={<Cast />} />\n                <Route path=\"reviews\" element={<Reviews />} />\n              </Routes>\n            </Suspense>\n          </>\n        )}\n      </>\n    );\n  }"],"names":["movieDbApi","axios","baseURL","params","api_key","getTrendingMovies","page","get","respons","data","results","getMovieById","movieId","getMovieByQuery","query","getMovieCast","getMovieRewiews","MovieCard","movie","title","poster_path","popularity","overview","genres","className","src","alt","Math","round","map","gen","name","join","SubMenu","to","Cast","lazy","Reviews","MovieDetailsPage","useState","setMovie","useParams","location","useRef","useLocation","state","from","navigate","useNavigate","useEffect","then","r","onClick","current","Suspense","fallback","path","element"],"sourceRoot":""}